version: "3.7"
services:
    lifreshdb:
        # 컨테이너 이름 지정
        container_name: lifreshdb
        # 이미지 지정 - Official Images로 컨테이너를 생성
        image: mysql:8.0
        restart: always
        environment:
            MYSQL_DATABASE: lifresh
            MYSQL_USER: lifresh
            MYSQL_PASSWORD: lifresh
            MYSQL_ROOT_PASSWORD: lifresh
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 500M
        # 호스트에 있는 폴더를 컨테이너 안에 있는 폴더로 마운트
        volumes:
            - ./mysql/conf.d:/etc/mysql/conf.d
            - ./mysql/data:/var/lib/mysql
            - ./mysql/init.d:/docker-entrypoint-initdb.d
        # 연결 포트 지정
        ports:
            - "3306:3306"

    lifreshredis:
        image: redis:latest
        container_name: lifreshredis
        hostname: redis
        ports:
            - 6379:6379
        volumes:
            - ./redis/data:/var/lib/redis:rw
        restart: always
        environment:
            REDIS_DATABASE: test
            REDIS_USER: test
            REDIS_PASSWORD: 1234
            REDIS_ROOT_PASSWORD: 1234


    lifreshapp:
        container_name: lifreshapp
        # volumes:
        #     - ./go:/go
        build:
            context: ./go
            dockerfile: dockerfile
        ports:
            - 8000:8000
        # db 컨테이너가 올라간 후 app 컨테이너를 올린다.
        depends_on:
            - lifreshdb
            - lifreshredis
            - fluentd-client
        links:
            - lifreshdb
            - lifreshredis
            - fluentd-client
        extra_hosts:
            - "host.docker.internal:host-gateway"

    # fluentd:
    #     build: ./fluentd
    #     volumes:
    #         - ./fluentd/conf:/fluentd/etc
    #     depends_on:
    #         - "elasticsearch" 
    #     links:
    #         - "elasticsearch"
    #     container_name: fluentd
    #     ports:
    #         - "24223:24223"
    #         - "24223:24223/udp"

    fluentd-client:
        build: ./fluentd-client
        volumes:
            - ./fluentd-client/conf:/fluentd-client/etc
        # links:
        #     - "fluentd"
        container_name: fluentd-client
        ports:
            - "24224:24224"
            - "24224:24224/udp"

    # elasticsearch: 
    #     image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    #     environment: 
    #         - "discovery.type=single-node" 
    #     expose: 
    #         - "9200" 
    #     ports: 
    #         - "9200:9200" 
    
    # kibana: 
    #     image: kibana:7.17.0
    #     depends_on: 
    #         - "elasticsearch" 
    #     ports: 
    #         - "5601:5601"

    lifreshweb:
        container_name: lifreshweb
        build:
            context: ./nginx
            dockerfile: dockerfile
        depends_on:
            - lifreshapp
        volumes:
            - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "80:80"
            - "443:443"
        links:
            - lifreshapp
        restart: always

    # lifreshdotnet:
    #         # 컨테이너 이름 지정
    #     container_name: lifreshdotnet
    #     # 이미지 지정 - Official Images로 컨테이너를 생성
    #     image: mcr.microsoft.com/dotnet/sdk:6.0
    #     depends_on:
    #         - lifreshdb
    #         - lifreshredis
    #     links:
    #         - lifreshdb
    #         - lifreshredis


